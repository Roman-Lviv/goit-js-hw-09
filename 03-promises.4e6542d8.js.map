{"mappings":"AAcaA,SAASC,cAAc,SAE/BC,iBAAiB,UAAU,SAAUC,GACxCA,EAAMC,iBAEN,IAAMC,EAAQC,OAAOC,KAAKN,cAAc,kBAAkBO,OACpDC,EAAOH,OAAOC,KAAKN,cAAc,iBAAiBO,OAClDE,EAASJ,OAAOC,KAAKN,cAAc,mBAAmBO,OAExDG,EAAW,GAEf,SAASC,IAzBX,IAAuBC,EAAUC,EA0BzBH,GAAYD,IA1BGG,EA2BHF,EA3BaG,EA2BHT,EA1BrB,IAAIU,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,KAkBEQ,MAAK,SAAAC,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MACjBU,QAAQC,IAAI,uBAAwCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,M,IAE3Da,OAAM,SAAAJ,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MAClBU,QAAQC,IAAI,sBAAqCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,M,IAExDc,SAAQ,WACPjB,IACAN,GAASI,EACTG,G,IAKRA,E","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', function (event) {\n  event.preventDefault();\n\n  const delay = Number(this.querySelector('[name=\"delay\"]').value);\n  const step = Number(this.querySelector('[name=\"step\"]').value);\n  const amount = Number(this.querySelector('[name=\"amount\"]').value);\n\n  let position = 1;\n\n  function createPromises() {\n    if (position <= amount) {\n      createPromise(position, delay)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        })\n        .finally(() => {\n          position++;\n          delay += step;\n          createPromises();\n        });\n    }\n  }\n\n  createPromises();\n});\n"],"names":["document","querySelector","addEventListener","event","preventDefault","delay1","Number","this","value","step","amount","position1","createPromises","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","param","console","log","concat","catch","finally"],"version":3,"file":"03-promises.4e6542d8.js.map"}