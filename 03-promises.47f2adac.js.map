{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIAQ,SAASC,cAAc,SAE/BC,iBAAiB,UAAUC,eAAgBC,GAC9CA,EAAMC,iBAEN,IAAIC,EAAeC,OAAOC,KAAKP,cAAc,kBAAkBQ,OAC/D,MAAMC,EAAOH,OAAOC,KAAKP,cAAc,iBAAiBQ,OAClDE,EAASJ,OAAOC,KAAKP,cAAc,mBAAmBQ,OAE5D,IAAK,IAAIlB,EAAW,EAAGA,GAAYoB,EAAQpB,IAAY,CACrD,IACE,MAAMqB,QAAetB,EAAcC,EAAUe,GAC7ClB,EAAAyB,OAAOC,QACL,uBAAqBF,EAAIrB,eAAoBqB,EAAEpB,U,CAEjD,MAAOuB,GACP3B,EAAAyB,OAAOG,QACL,sBAAoBD,EAAExB,eAAmBwB,EAAEvB,U,CAI/Cc,GAAgBI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', async function (event) {\n  event.preventDefault();\n\n  let currentDelay = Number(this.querySelector('[name=\"delay\"]').value);\n  const step = Number(this.querySelector('[name=\"step\"]').value);\n  const amount = Number(this.querySelector('[name=\"amount\"]').value);\n\n  for (let position = 1; position <= amount; position++) {\n    try {\n      const result = await createPromise(position, currentDelay);\n      Notify.success(\n        `✅ Fulfilled promise ${result.position} in ${result.delay}ms`\n      );\n    } catch (error) {\n      Notify.failure(\n        `❌ Rejected promise ${error.position} in ${error.delay}ms`\n      );\n    }\n\n    currentDelay += step;\n  }\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","async","event","preventDefault","currentDelay","Number","this","value","step","amount","result","Notify","success","error","failure"],"version":3,"file":"03-promises.47f2adac.js.map"}